name: Auto-publish
on: 
  push:
    branches:
      - master
      - next
jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.check.outputs.changed }}
      version: ${{ steps.check.outputs.version }}
      commit: ${{ steps.check.outputs.commit }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Check version changes
      uses: EndBug/version-check@v1
      id: check
  latest:
    name: Publish Latest
    runs-on: ubuntu-latest
    needs: check
    if: contains(github.ref, 'master') && needs.check.outputs.changed == 'true'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.check.outputs.commit }}
    - name: Parse Changelog # Exit if changelog not found
      id: changelog
      run: node ./scripts/changelog
      with:
        version: ${{ needs.check.outputs.version }}
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        registry-url: "https://registry.npmjs.org"
    - name: Install dependencies
      run: npm install
    - name: Publish to NPM
      run: npm publish # Publish builds automatically
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Tag and Release
      uses: avakar/tag-and-release@v1
      with:
        tag_name: ${{ needs.check.outputs.version }}
        commit: ${{ needs.check.outputs.commit }}
        body: ${{ steps.changelog.outputs.changes }}
  beta:
    name: Publish Beta
    runs-on: ubuntu-latest
    needs: check
    if: contains(github.ref, 'next') && needs.check.outputs.changed == 'true'
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: ${{ needs.check.outputs.commit }}
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        registry-url: "https://registry.npmjs.org"
    - name: Install dependencies
      run: npm install
    - name: Publish to NPM
      run: npm publish --tag next # Publish builds automatically
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
